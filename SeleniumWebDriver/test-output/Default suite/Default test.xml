<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="SPHINX" ignored="0" name="Default test" tests="6" failures="0" timestamp="17 Jan 2019 13:30:36 GMT" time="0.2" errors="0">
  <testcase name="@BeforeClass setup" time="0.133" classname="test.BaseTest">
    <failure type="java.lang.IllegalArgumentException" message="InputStream cannot be null">
      <![CDATA[java.lang.IllegalArgumentException: InputStream cannot be null
at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:117)
at com.aventstack.extentreports.configuration.ConfigLoader.getConfigurationHash(ConfigLoader.java:64)
at com.aventstack.extentreports.reporter.AbstractReporter.loadXMLConfig(AbstractReporter.java:64)
at com.aventstack.extentreports.reporter.AbstractReporter.loadXMLConfig(AbstractReporter.java:60)
at test.BaseTest.setup(BaseTest.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass cleanUp" time="0.0" classname="test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass cleanUp -->
  <testcase name="verifyTitle" time="0.0" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- verifyTitle -->
  <testcase name="verifyLogin" time="0.0" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase name="dataDrivenLogin" time="0.0" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- dataDrivenLogin -->
  <testcase name="dataDrivenLogin" time="0.001" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- dataDrivenLogin -->
  <testcase name="dataDrivenLogin" time="0.0" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- dataDrivenLogin -->
  <testcase name="excelTest" time="0.0" classname="test.LoginTests">
    <skipped/>
  </testcase> <!-- excelTest -->
</testsuite> <!-- Default test -->
